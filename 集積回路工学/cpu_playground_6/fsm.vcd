$date
	Mon Jun  7 09:21:53 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 2 ! S [1:0] $end
$var wire 3 " O [2:0] $end
$var wire 3 # LD [2:0] $end
$var wire 3 $ B [2:0] $end
$var wire 3 % A [2:0] $end
$var reg 1 & CLK $end
$var reg 3 ' IN [2:0] $end
$var reg 1 ( RST $end
$scope module fsm $end
$var wire 1 & CLK $end
$var wire 3 ) IN [2:0] $end
$var wire 1 ( RST $end
$var wire 2 * S [1:0] $end
$var wire 3 + Y [2:0] $end
$var wire 3 , O [2:0] $end
$var wire 1 - LD_O $end
$var wire 1 . LD_B $end
$var wire 1 / LD_A $end
$var wire 3 0 LD [2:0] $end
$var wire 3 1 B [2:0] $end
$var wire 3 2 A [2:0] $end
$var reg 2 3 state [1:0] $end
$scope module a_reg $end
$var wire 1 & CLK $end
$var wire 3 4 D [2:0] $end
$var wire 1 / LD $end
$var wire 1 ( RST $end
$var wire 3 5 Q [2:0] $end
$var reg 3 6 q [2:0] $end
$upscope $end
$scope module alu $end
$var wire 3 7 A [2:0] $end
$var wire 3 8 Y [2:0] $end
$var wire 3 9 B [2:0] $end
$upscope $end
$scope module b_reg $end
$var wire 1 & CLK $end
$var wire 3 : D [2:0] $end
$var wire 1 . LD $end
$var wire 1 ( RST $end
$var wire 3 ; Q [2:0] $end
$var reg 3 < q [2:0] $end
$upscope $end
$scope module o_reg $end
$var wire 1 & CLK $end
$var wire 3 = D [2:0] $end
$var wire 1 - LD $end
$var wire 3 > Q [2:0] $end
$var wire 1 ( RST $end
$var reg 3 ? q [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ?
bx >
bx =
bx <
bx ;
b0 :
bx 9
bx 8
bx 7
bx 6
bx 5
b0 4
bx 3
bx 2
bx 1
bx 0
x/
x.
x-
bx ,
bx +
bx *
b0 )
1(
b0 '
0&
bx %
bx $
bx #
bx "
bx !
$end
#1
1/
0.
b100 #
b100 0
0-
b0 +
b0 8
b0 =
b0 %
b0 2
b0 5
b0 6
b0 7
b0 $
b0 1
b0 9
b0 ;
b0 <
b0 "
b0 ,
b0 >
b0 ?
b0 !
b0 *
b0 3
1&
#2
0&
0(
#3
1&
#4
0&
b10 '
b10 )
b10 4
b10 :
#5
0/
b10 #
b10 0
1.
b10 +
b10 8
b10 =
b10 %
b10 2
b10 5
b10 6
b10 7
b1 !
b1 *
b1 3
1&
#6
0&
b0 '
b0 )
b0 4
b0 :
#7
1&
#8
0&
#9
1&
#10
0&
