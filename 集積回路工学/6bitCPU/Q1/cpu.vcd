$date
	Fri Jul 16 15:41:34 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 6 ! Oout [5:0] $end
$var reg 1 " CK $end
$var reg 6 # in [5:0] $end
$scope module ToyCPU_6bit $end
$var wire 1 " CK $end
$var wire 6 $ in [5:0] $end
$var wire 10 % op_im [9:0] $end
$var wire 1 & cFlag $end
$var wire 6 ' address [5:0] $end
$var wire 6 ( Y [5:0] $end
$var wire 2 ) S [1:0] $end
$var wire 6 * Oout [5:0] $end
$var wire 4 + OP [3:0] $end
$var wire 1 , LD_out $end
$var wire 1 - LD_PC $end
$var wire 1 . LD_B $end
$var wire 1 / LD_A $end
$var wire 6 0 IM [5:0] $end
$var wire 6 1 Bout [5:0] $end
$var wire 6 2 BUS [5:0] $end
$var wire 6 3 Aout [5:0] $end
$var reg 6 4 EX_BUSreg [5:0] $end
$var reg 1 5 EX_LDAreg $end
$var reg 1 6 EX_LDBreg $end
$var reg 1 7 EX_LDPCreg $end
$var reg 1 8 EX_LDoutreg $end
$var reg 6 9 ID_IMreg [5:0] $end
$var reg 1 : ID_LDAreg $end
$var reg 1 ; ID_LDBreg $end
$var reg 1 < ID_LDPCreg $end
$var reg 1 = ID_LDoutreg $end
$var reg 2 > ID_Sreg [1:0] $end
$var reg 6 ? IF_IMreg [5:0] $end
$var reg 4 @ IF_OPreg [3:0] $end
$scope module alu $end
$var wire 6 A IM [5:0] $end
$var wire 1 & cFlag $end
$var wire 7 B add [6:0] $end
$var wire 6 C Y [5:0] $end
$var wire 6 D BUS [5:0] $end
$upscope $end
$scope module decoder $end
$var wire 1 & Dcf $end
$var wire 4 E OP [3:0] $end
$var wire 2 F S [1:0] $end
$var wire 1 , LD_out $end
$var wire 1 - LD_PC $end
$var wire 1 . LD_B $end
$var wire 1 / LD_A $end
$upscope $end
$scope module memory $end
$var wire 10 G Q [9:0] $end
$var wire 6 H AD [5:0] $end
$upscope $end
$scope module programCounter $end
$var wire 6 I AD [5:0] $end
$var wire 1 " CK $end
$var wire 1 7 LD_PC $end
$var wire 6 J OUT [5:0] $end
$var reg 6 K q [5:0] $end
$upscope $end
$scope module registers $end
$var wire 6 L BUS [5:0] $end
$var wire 1 " CK $end
$var wire 1 5 LD_A $end
$var wire 1 6 LD_B $end
$var wire 1 8 LD_out $end
$var wire 6 M O_out [5:0] $end
$var wire 6 N B_out [5:0] $end
$var wire 6 O A_out [5:0] $end
$scope module A_register $end
$var wire 6 P BUS [5:0] $end
$var wire 1 " CK $end
$var wire 1 5 LD $end
$var wire 6 Q OUT [5:0] $end
$var reg 6 R q [5:0] $end
$upscope $end
$scope module B_register $end
$var wire 6 S BUS [5:0] $end
$var wire 1 " CK $end
$var wire 1 6 LD $end
$var wire 6 T OUT [5:0] $end
$var reg 6 U q [5:0] $end
$upscope $end
$scope module output_register $end
$var wire 6 V BUS [5:0] $end
$var wire 1 " CK $end
$var wire 1 8 LD $end
$var wire 6 W OUT [5:0] $end
$var reg 6 X q [5:0] $end
$upscope $end
$upscope $end
$scope module selector $end
$var wire 6 Y C0 [5:0] $end
$var wire 6 Z C1 [5:0] $end
$var wire 6 [ C2 [5:0] $end
$var wire 6 \ C3 [5:0] $end
$var wire 2 ] S [1:0] $end
$var wire 6 ^ Y [5:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ^
b0 ]
b0 \
b101 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
b11000000 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
0=
0<
0;
0:
b0 9
08
07
06
05
b0 4
b0 3
b0 2
b0 1
b0 0
0/
0.
0-
0,
b11 +
b0 *
b0 )
b0 (
b0 '
0&
b11000000 %
b101 $
b101 #
0"
b0 !
$end
#1
b101 +
1/
b10 )
b10 F
b101000000 %
b101000000 G
b1 '
b1 H
b1 J
b1 K
b11 @
b11 E
1"
#2
0"
#3
b101 2
b101 D
b101 B
b101 (
b101 C
b101 ^
0/
1.
b1001 +
b0 )
b0 F
b10 >
b10 ]
1:
b101 @
b101 E
b1001000000 %
b1001000000 G
b10 '
b10 H
b10 J
b10 K
1"
#4
0"
#5
b1011 +
b0 2
b0 D
0.
1,
b11 0
b0 B
b0 (
b0 C
b0 ^
b1 )
b1 F
b1011000011 %
b1011000011 G
b11 '
b11 H
b11 J
b11 K
15
b101 4
b101 I
b101 L
b101 P
b101 S
b101 V
b0 >
b0 ]
1;
0:
b1001 @
b1001 E
1"
#6
0"
#7
0,
1-
bx +
b11 )
b11 F
bx 0
16
05
b0 4
b0 I
b0 L
b0 P
b0 S
b0 V
b1 >
b1 ]
1=
0;
b11 ?
b1011 @
b1011 E
bx %
bx G
b100 '
b100 H
b100 J
b100 K
b101 3
b101 O
b101 Q
b101 R
b101 Y
1"
#8
0"
#9
x/
x.
x,
x-
b11 2
b11 D
bx )
bx F
b101 '
b101 H
b101 J
b101 K
18
06
b11 B
b11 9
b11 A
b11 >
b11 ]
1<
0=
bx ?
bx @
bx E
1"
#10
0"
#11
bx 2
bx D
x&
b0x0x (
b0x0x C
b0x0x ^
17
08
b11 4
b11 I
b11 L
b11 P
b11 S
b11 V
bx B
bx 9
bx A
bx >
bx ]
x<
x=
x;
x:
b110 '
b110 H
b110 J
b110 K
1"
#12
0"
#13
b1011 +
b11 0
b1011000011 %
b1011000011 G
b11 '
b11 H
b11 J
b11 K
x7
x8
x6
x5
bx 4
bx I
bx L
bx P
bx S
bx V
1"
#14
0"
#15
bx +
bx 0
b11 ?
b1011 @
b1011 E
bx %
bx G
bx '
bx H
bx J
bx K
1"
#16
0"
#17
b11 9
b11 A
bx ?
bx @
bx E
1"
#18
0"
#19
bx 9
bx A
1"
#20
0"
#21
1"
#22
0"
#23
1"
#24
0"
#25
1"
#26
0"
#27
1"
#28
0"
#29
1"
#30
0"
#31
1"
#32
0"
#33
1"
#34
0"
#35
1"
#36
0"
#37
1"
#38
0"
#39
1"
#40
0"
#41
1"
#42
0"
#43
1"
#44
0"
#45
1"
#46
0"
#47
1"
#48
0"
#49
1"
#50
0"
